function Sys.xor 0
push argument 0 
push argument 1 
push argument 0 
push argument 1 
not             
and             
pop temp 0
push argument 0 
not             
push argument 1 
and             
pop temp 1
push temp 0
push temp 1
or              
return

function Sys.shiftLeft 4
push argument 0
push argument 1
pop temp 0
pop temp 1

label Loop 
push temp 0
push constant 0
eq
if-goto END  
push temp 1
push temp 1
add 
pop temp 1
push temp 0
push constant 1
sub
pop temp 0
goto Loop 
label END 
push temp 1
return

function Sys.computeParity 2
    push constant 0
    pop local 0
    
    push constant 0
    pop local 1

label LOOP
    push local 1
    push constant 15
    eq
    if-goto END

    push constant 1
    push local 1
    call Sys.shiftLeft 2

    push argument 0
    and
    push constant 0
    eq
    not
    if-goto SET_PARITY

    goto NEXT

label SET_PARITY
    push local 0
    push constant 1
    call Sys.xor 2
    pop local 0

label NEXT
    push local 1
    push constant 1
    add
    pop local 1
    goto LOOP

label END
    push local 0
    return



function Sys.encode 0
  // Duplicate argument 0 so we can both preserve it and pass a copy to computeParity
  push argument 0
  push argument 0
  call Sys.computeParity 1   // returns 0 or 1 on top of stack
  pop temp 0                 // store the parity bit in temp 0

  // Check parity
  push temp 0
  if-goto SET_MSB


  push argument 0
  push constant 32767
  and
  return


label SET_MSB

  push argument 0
  push constant 32767
  push constant 1
  add
  or
  return

function Sys.init 0
    call Sys.encode 1

label WHILE
    goto WHILE